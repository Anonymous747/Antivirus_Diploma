
// This file was auto-generated by ML.NET Model Builder. 

using System;

namespace FullAntivirusCheck
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            FullAntivirusCheck.ModelInput sampleData = new FullAntivirusCheck.ModelInput()
            {
                Name = @"ose.exe",
                Md5 = @"9d10f99a6712e28f8acd5641e3a7ea6b",
                Machine = 332F,
                SizeOfOptionalHeader = 224F,
                Characteristics = 3330F,
                MajorLinkerVersion = 9F,
                MinorLinkerVersion = 0F,
                SizeOfCode = 130560F,
                SizeOfInitializedData = 19968F,
                SizeOfUninitializedData = 0F,
                AddressOfEntryPoint = 81778F,
                BaseOfCode = 4096F,
                BaseOfData = 143360F,
                ImageBase = 7.717519E+08F,
                SectionAlignment = 4096F,
                FileAlignment = 512F,
                MajorOperatingSystemVersion = 5F,
                MinorOperatingSystemVersion = 1F,
                MajorImageVersion = 0F,
                MinorImageVersion = 0F,
                MajorSubsystemVersion = 5F,
                MinorSubsystemVersion = 1F,
                SizeOfImage = 159744F,
                SizeOfHeaders = 1024F,
                CheckSum = 188943F,
                Subsystem = 2F,
                DllCharacteristics = 33088F,
                SizeOfStackReserve = 1048576F,
                SizeOfStackCommit = 4096F,
                SizeOfHeapReserve = 1048576F,
                SizeOfHeapCommit = 4096F,
                LoaderFlags = 0F,
                NumberOfRvaAndSizes = 16F,
                SectionsNb = 4F,
                SectionsMinRawsize = 2048F,
                SectionMaxRawsize = 130560F,
                SectionsMinVirtualsize = 1840F,
                SectionMaxVirtualsize = 130296F,
                ImportsNbDLL = 7F,
                ImportsNb = 181F,
                ImportsNbOrdinal = 0F,
                ExportNb = 0F,
                ResourcesNb = 2F,
                ResourcesMinSize = 518F,
                ResourcesMaxSize = 1156F,
                LoadConfigurationSize = 72F,
                VersionInformationSize = 18F,
            };

            // Make a single prediction on the sample data and print results
            var predictionResult = FullAntivirusCheck.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Legitimate with predicted Legitimate from sample data...\n\n");


            Console.WriteLine($"Name: {@"ose.exe"}");
            Console.WriteLine($"Md5: {@"9d10f99a6712e28f8acd5641e3a7ea6b"}");
            Console.WriteLine($"Machine: {332F}");
            Console.WriteLine($"SizeOfOptionalHeader: {224F}");
            Console.WriteLine($"Characteristics: {3330F}");
            Console.WriteLine($"MajorLinkerVersion: {9F}");
            Console.WriteLine($"MinorLinkerVersion: {0F}");
            Console.WriteLine($"SizeOfCode: {130560F}");
            Console.WriteLine($"SizeOfInitializedData: {19968F}");
            Console.WriteLine($"SizeOfUninitializedData: {0F}");
            Console.WriteLine($"AddressOfEntryPoint: {81778F}");
            Console.WriteLine($"BaseOfCode: {4096F}");
            Console.WriteLine($"BaseOfData: {143360F}");
            Console.WriteLine($"ImageBase: {7.717519E+08F}");
            Console.WriteLine($"SectionAlignment: {4096F}");
            Console.WriteLine($"FileAlignment: {512F}");
            Console.WriteLine($"MajorOperatingSystemVersion: {5F}");
            Console.WriteLine($"MinorOperatingSystemVersion: {1F}");
            Console.WriteLine($"MajorImageVersion: {0F}");
            Console.WriteLine($"MinorImageVersion: {0F}");
            Console.WriteLine($"MajorSubsystemVersion: {5F}");
            Console.WriteLine($"MinorSubsystemVersion: {1F}");
            Console.WriteLine($"SizeOfImage: {159744F}");
            Console.WriteLine($"SizeOfHeaders: {1024F}");
            Console.WriteLine($"CheckSum: {188943F}");
            Console.WriteLine($"Subsystem: {2F}");
            Console.WriteLine($"DllCharacteristics: {33088F}");
            Console.WriteLine($"SizeOfStackReserve: {1048576F}");
            Console.WriteLine($"SizeOfStackCommit: {4096F}");
            Console.WriteLine($"SizeOfHeapReserve: {1048576F}");
            Console.WriteLine($"SizeOfHeapCommit: {4096F}");
            Console.WriteLine($"LoaderFlags: {0F}");
            Console.WriteLine($"NumberOfRvaAndSizes: {16F}");
            Console.WriteLine($"SectionsNb: {4F}");
            Console.WriteLine($"SectionsMinRawsize: {2048F}");
            Console.WriteLine($"SectionMaxRawsize: {130560F}");
            Console.WriteLine($"SectionsMinVirtualsize: {1840F}");
            Console.WriteLine($"SectionMaxVirtualsize: {130296F}");
            Console.WriteLine($"ImportsNbDLL: {7F}");
            Console.WriteLine($"ImportsNb: {181F}");
            Console.WriteLine($"ImportsNbOrdinal: {0F}");
            Console.WriteLine($"ExportNb: {0F}");
            Console.WriteLine($"ResourcesNb: {2F}");
            Console.WriteLine($"ResourcesMinSize: {518F}");
            Console.WriteLine($"ResourcesMaxSize: {1156F}");
            Console.WriteLine($"LoadConfigurationSize: {72F}");
            Console.WriteLine($"VersionInformationSize: {18F}");


            Console.WriteLine($"\n\nPredicted Legitimate: {predictionResult.PredictedLabel}\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
